# This configuration file is in toml format, which is defined here:
# https://github.com/toml-lang/toml

# Unless specified otherwise, the below values are the defaults.

root = "hdfs://namenode:8020/path/to/sequins"
# The url or directory where the sequencefiles are. This can be a local
# directory, an HDFS url of the form hdfs://<namenode>:<port>/path/to/stuff,
# or an S3 url of the form s3://<bucket>/path/to/stuff. This should be a
# a directory of directories of directories; each first level represents a 'db',
# and each subdirectory therein represents a 'version' of that db. See the
# README for more information. This must be set, but can be overriden from the
# command line with --root.

# bind = "0.0.0.0:9599"
# The address to bind on. This can be overridden from the command line with
# --bind.

# local_store = "/var/sequins/"
# This is where sequins will store its internal copy of all the data it ingests.
# This can be overriden from the command line with --local-store.

# max_parallel_loads = 4
# Unset by default. If this flag is set, sequins will only update this many dbs
# at a time, minimizing disk usage while new data is being loaded. If you set
# this to 1, then loads will be completely serialized.

# refresh_period = "10m"
# Unset by default. If this is specified, sequins will periodically download new
# data this often (in seconds). If you enable this, you should also enable
# 'require_success_file', or sequins may start automatically downloading a
# partially-created set of files.

# require_success_file = false
# If this flag is set, sequins will only ingest data from directories that have
# a _SUCCESS file (which is produced by hadoop when it completes a job).

# content_type = "application/json"
# Unset by default. If this is set, sequins will set this Content-Type header on
# responses.

[s3]

# region = "us-west-1"
# Unset by default. The S3 region for the bucket where your data is. If unset,
# and sequins is running on EC2, this will be set to the instance region.

# access_key_id = "AKIAIOSFODNN7EXAMPLE"
# secret_access_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
# Unset by default. The access key and secret to use for S3. If unset, the env
# variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY will be used, or IAM
# instance role credentials if they are available.

[zk]

# servers = ["localhost:2181"]
# Unset by default. If set, sequins will connect to zookeeper at the given
# addresses and try to join the existing cluster.

# replication = 2
# This is the number of replicas responsible for each partition.

# time_to_converge = "10s"
# Upon startup, sequins will wait this long for the set of known peers to
# stabilize.

# proxy_timeout = "100ms"
# This is the total timeout (connect + request) for proxied requests to peers
# in a sequins cluster. You may want to increase this if you're running on
# particularly cold storage, or if there are other factors significantly
# increasing request time.

# cluster_name = "sequins"
# This defines the root prefix to use for zookeeper state. If you are running
# multiple sequins clusters using the same zookeeper for coordination, you
# should change this so they can't conflict.

# advertised_hostname = "sequins1.example.com"
# Unset by default. This is the hostname sequins uses to advertise itself to
# peers in a cluster. It should be resolvable by those peers. If left unset, it
# will be set to the hostname of the server.

# shard_id = "sequins1"
# Unset by default. The shard ID to determine which partitions
# the node is responsible. By default, it is the same as advertised_hostname.
# Unlike the hostname, however, it doesn't have to be unique; two nodes can
# have the same shard_id, and will download the same partitions. This can be
# useful if you don't have stable hostnames, but want to be able to rebuild
# a server to take the same exact partitions.
